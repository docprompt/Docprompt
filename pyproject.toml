[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "docprompt"
version = "0.8.0"
description = "Documents and large language models."
authors = [
  {name = "Frank Colson", email = "frank@pageleaf.io"}
]
dependencies = [
  "pillow>=9.0.1",
  "tqdm>=4.50.2",
  "fsspec>=2022.11.0",
  "pydantic>=2.1.0",
  "tenacity>=7.0.0",
  "pypdfium2<5.0.0,>=4.28.0",
  "filetype>=1.2.0",
  "jinja2>=3.1.4",
  "beautifulsoup4>=4.12.3"
]
requires-python = "<3.13,>=3.8.6"
readme = "README.md"
license = {text = "Apache-2.0"}
classifiers = ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12"]

[project.optional-dependencies]
google = ["google-cloud-documentai>=2.20.0"]
azure = ["azure-ai-formrecognizer>=3.3.0"]
search = [
  "tantivy<1.0.0,>=0.21.0",
  "rtree<3.0.0,>=1.2.0",
  "networkx<4.0.0,>=2.5.0",
  "rapidfuzz>=3.0.0"
]
anthropic = [
  "anthropic>=0.26.0"
]
openai = [
  "openai>=1.0.1"
]
aws = [
  "aioboto3>=13.1.0",
  "boto3>=1.18.0"
]

[project.scripts]
docprompt = "docprompt.cli:main"

[project.urls]
homepage = "https://github.com/Docprompt/docprompt"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv`
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
ignore = [
  "E501"
]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true

[tool.pdm]
distribution = true

[tool.pdm.build]
includes = ["docprompt", "tests"]

[tool.pdm.dev-dependencies]
test = [
  "isort<6.0.0,>=5.12.0",
  "flake8<7.0.0,>=6.1.0",
  "flake8-docstrings<2.0.0,>=1.7.0",
  "mypy<2.0.0,>=1.6.1",
  "pytest<8.0.0,>=7.4.2",
  "pytest-cov<5.0.0,>=4.1.0",
  "ruff<1.0.0,>=0.3.3",
  "pytest-asyncio>=0.23.7"
]
dev = [
  "tox<4.0.0,>=3.20.1",
  "virtualenv<25.0.0,>=20.2.2",
  "pip<21.0.0,>=20.3.1",
  "twine<4.0.0,>=3.3.0",
  "pre-commit>=3.5.0",
  "toml<1.0.0,>=0.10.2",
  "bump2version<2.0.0,>=1.0.1",
  "ipython>=7.12.0",
  "python-dotenv>=1.0.1",
  "ipykernel>=6.29.4",
  "pytest-asyncio>=0.23.7"
]
docs = [
  "mkdocs>=1.6.0",
  "mkdocs-material>=9.5.27",
  "mkdocstrings[python]>=0.25.1",
  "mkdocs-blog-plugin>=0.25",
  "mkdocs-gen-files>=0.5.0",
  "mkdocs-literate-nav>=0.6.1"
]

[tool.pdm.scripts]
docs = "mkdocs serve"
lint = "pre-commit run --all-files"
cov = {shell = "python tests/_run_tests_with_coverage.py {args}"}

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
extend-select = ["I"]
ignore = ["D212"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
